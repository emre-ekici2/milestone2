apiVersion: v1
kind: ConfigMap
metadata:
  name: index-html-configmap
data:
  index.html: |
    <!DOCTYPE html><html lang="en"><head><meta charset="UTF-8" /><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><title>Milestone 2</title></head><body><h1><span id="user">Loading...</span> has reached milestone 2!!!!!</h1><script>fetch("http://192.168.56.5:30090/user") .then((res) => res.json()) .then((data) => {const user = data.name;document.getElementById("user").innerText = user;});</script></body></html>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
    selector:
      matchLabels:
        app: nginx
    template:
      metadata:
        labels:
          app: nginx
      spec:
        containers:
        - name: nginx
          image: nginx:latest
          ports:
          - containerPort: 80
          volumeMounts:
          - mountPath: /usr/share/nginx/html
            name: nginx-index-file
        volumes:
        - name: nginx-index-file
          configMap:
            name: index-html-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 80
      nodePort: 30080
  selector:
    app: nginx
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
spec:
  selector:
    app: fastapi
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi
spec:
  selector:
   matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
        - name: fastapi
          image: r0874339/pleaseworkgod:latest
          ports:
            - containerPort: 8080
          env:
            - name: POSTGRES_USER
              value: "my_user"
            - name: POSTGRES_PASSWORD
              value: "my_password"
            - name: POSTGRES_HOST
              value: "postgresql-service"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: "my_db"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-configmap
data:
  db_setup.sql: |-
    CREATE DATABASE my_db;
    \c my_db
    CREATE TABLE my_name (name text);
    INSERT INTO my_name (name) VALUES ('Emre Ekici');

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service
spec:
  type: NodePort
  selector:
    app: postgresql
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql-deployment
spec:
  selector:
    matchLabels:
      app: postgresql
  replicas: 1
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:latest
          env:
            - name: POSTGRES_USER
              value: my_user
            - name: POSTGRES_PASSWORD
              value: my_password
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-configmap-volume
              mountPath: /docker-entrypoint-initdb.d
          readinessProbe:
            exec:
              command: ["pg_isready"]
          livenessProbe:
            exec:
              command: ["pg_isready"]
      volumes:
        - name: postgres-configmap-volume
          configMap:
            name: postgres-configmap
---
